
// !gradient for text
@mixin textGradient($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// !media
@mixin media($width) {
  @media (max-width: #{$width + '.98' + px}) {
    @content;
  }
}

// !:not (last-child)
@mixin notLast() {
  &:not(:last-child) {
    @content;
  }
}

// !:not (first-child)
@mixin notFirst() {
  &:not(:first-child) {
    @content;
  }
}

// !обрезает текст до определенного кол-ва строк, остаток заменяет на 3 точки (...)
@mixin lineClamp($value) {
  display: -webkit-box;
  -webkit-line-clamp: $value;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// !styled placeholder for TextArea
@mixin styledPlaceholder($color, $fontSize: inherit, $lineHeight: normal) {
  &:-moz-placeholder {
    color: $color;
    font-size: $fontSize;
    line-height: $lineHeight;
  }
  &::-moz-placeholder {
    color: $color;
    font-size: $fontSize;
    line-height: $lineHeight;
  }
  &::-webkit-input-placeholder {
    color: $color;
    font-size: $fontSize;
    line-height: $lineHeight;
  }
  &:-ms-input-placeholder {
    color: $color;
    font-size: $fontSize;
    line-height: $lineHeight;
  }
}

// !плавное убирание placeholder
@mixin hidePlaceholder($time: 300, $effect: ease) {
  &::-webkit-input-placeholder       {opacity: 1; transition: opacity #{$time} + ms $effect;}
  &::-moz-placeholder                {opacity: 1; transition: opacity #{$time} + ms $effect;}
  &:-moz-placeholder                 {opacity: 1; transition: opacity #{$time} + ms $effect;}
  &:-ms-input-placeholder            {opacity: 1; transition: opacity #{$time} + ms $effect;}
  &:focus::-webkit-input-placeholder {opacity: 0; transition: opacity #{$time} + ms $effect;}
  &:focus::-moz-placeholder          {opacity: 0; transition: opacity #{$time} + ms $effect;}
  &:focus:-moz-placeholder           {opacity: 0; transition: opacity #{$time} + ms $effect;}
  &:focus:-ms-input-placeholder      {opacity: 0; transition: opacity #{$time} + ms $effect;}
}

// !after-before
@mixin afterBefore($type, $pos: absolute) {
  &::#{$type} {
    content: '';
    position: $pos;
    @content
  }
}
